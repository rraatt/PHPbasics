<?php

$a = "concat";
$b = "enate";
$c = $a.$b;
print $c."\n";
print strtoupper($c)."\n";

$arr = [1, 2, 3, 4];
print implode("|", $arr)."\n";
foreach ($arr as $elem){
    if($elem%2){
        print "odd\n";
    }
    else{
        print "even\n";
    }
}

$dict = ["key1" => "value1", "key2" => "value2"];
print $dict["key2"]."\n";
$dict["key2"] = "new value";
print $dict["key2"]."\n";

function test($arr){
    return $arr[rand(0, 3)];
}

print test($arr)."\n";

class TestClass{
    public $aboba;

    function __construct($value){
        $aboba = $value;
    }

    function getaboba(){
        return $this->aboba;
    }

    function talk(){
        print "Hello, I am aboba)\n";
    }

    function __destruct(){
        print "I am dying(\n";
    }
}

class Child extends TestClass{
    public $ocupation;

    function __construct($value, $ocupation)
    {
        parent::__construct($value);
        $this->ocupation = $ocupation;
    }

    function talk()
    {
        parent::talk(); // TODO: Change the autogenerated stub
        print "I am a child)\n";
    }

    function getocupation(){
        return $this->ocupation;
    }

    function __destruct()
    {
        parent::__destruct(); // TODO: Change the autogenerated stub
        print "I was just a child\n";
    }
}

$aboba = new TestClass("Khrys");
$child = new Child("Shera", "dog");
$aboba->talk();
$child->talk();
print $child->getocupation()."\n";

